{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js","dagre-d3.core.js","lib/arrows.js","lib/create-clusters.js","lib/create-edge-labels.js","lib/create-edge-paths.js","lib/create-nodes.js","lib/d3.js","lib/dagre.js","lib/graphlib.js","lib/intersect/index.js","lib/intersect/intersect-circle.js","lib/intersect/intersect-ellipse.js","lib/intersect/intersect-line.js","lib/intersect/intersect-node.js","lib/intersect/intersect-polygon.js","lib/intersect/intersect-rect.js","lib/label/add-html-label.js","lib/label/add-label.js","lib/label/add-svg-label.js","lib/label/add-text-label.js","lib/lodash.js","lib/position-clusters.js","lib/position-edge-labels.js","lib/position-nodes.js","lib/render.js","lib/shapes.js","lib/util.js","lib/version.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dagreD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"graphlib","dagre","intersect","render","util","version","./lib/dagre","./lib/graphlib","./lib/intersect","./lib/render","./lib/util","./lib/version",2,"normal","parent","id","edge","type","marker","append","attr","path","style","applyStyle","vee","undirected","default","./util",3,"createClusters","selection","clusters","nodes","filter","v","isSubgraph","svgClusters","selectAll","data","exit","remove","enter","node","applyTransition","each","thisGroup","d3","select","rect","labelGroup","addLabel","clusterLabelPos","c","domCluster","./label/add-label",4,"createEdgeLabels","svgEdgeLabels","edges","edgeToId","classed","label","bbox","getBBox","labelId","_","has","width","height","./d3","./lodash",5,"createEdgePaths","arrows","svgPaths","domEdge","elem","applyClass","arrowheadId","uniqueId","makeFragmentRef","location","href","calcPoints","arrowhead","url","fragmentId","baseUrl","split","tail","head","w","points","slice","unshift","intersectNode","push","createLine","line","svg","x","d","y","interpolate","lineInterpolate","tension","Number","lineTension","getCoords","matrix","ownerSVGElement","getScreenCTM","inverse","multiply","translate","svgPathsEnter","sourceElem","range","map","svgPathExit","source","getTotalLength","./intersect/intersect-node",6,"createNodes","shapes","simpleNodes","svgNodes","labelDom","shape","pick","paddingLeft","paddingRight","paddingTop","paddingBottom","shapeSvg","shapeBBox",7,8,"undefined",9,10,"circle","ellipse","polygon","./intersect-circle","./intersect-ellipse","./intersect-node","./intersect-polygon","./intersect-rect",11,"intersectCircle","rx","point","intersectEllipse",12,"ry","cx","cy","px","py","det","Math","sqrt","dx","abs","dy",13,"intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign",14,15,"intersectPolygon","polyPoints","x1","y1","intersections","minX","POSITIVE_INFINITY","minY","forEach","entry","min","left","top","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","console","log","./intersect-line",16,"intersectRect","sx","sy","h",17,"addHtmlLabel","root","fo","div","insert","html","labelStyle","clientWidth","clientHeight","../util",18,"labelSvg","labelType","addSVGLabel","addTextLabel","labelBBox","./add-html-label","./add-svg-label","./add-text-label",19,"domNode","appendChild",20,"lines","processEscapeSequences","text","ch","newText","escaped",21,"lodash",22,"positionClusters","created",23,"positionEdgeLabels",24,"positionNodes",25,"fn","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","layout","postProcessGraph","value","arguments","children","applyPadding","defaults","NODE_DEFAULT_ATTRS","canonicalizeLabelType","canonicalizeJustification","k","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","name","empty","obj","labelJust","toLowerCase","paddingX","paddingY","padding","./arrows","./create-clusters","./create-edge-labels","./create-edge-paths","./create-nodes","./dagre","./position-clusters","./position-edge-labels","./position-nodes","./shapes",26,"max","diamond","SQRT2","join","./intersect/intersect-circle","./intersect/intersect-ellipse","./intersect/intersect-polygon","./intersect/intersect-rect",27,"escapeId","str","String","replace","ID_DELIM","dom","styleFn","classFn","otherClasses","graph","isPlainObject","transition","isFunction",28],"mappings":"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","file":"dagre-d3.core.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"./lib/graphlib\"),\n  dagre: require(\"./lib/dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dagreD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"./lib/graphlib\"),\n  dagre: require(\"./lib/dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n\n},{\"./lib/dagre\":8,\"./lib/graphlib\":9,\"./lib/intersect\":10,\"./lib/render\":25,\"./lib/util\":27,\"./lib/version\":28}],2:[function(require,module,exports){\nvar util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\n},{\"./util\":27}],3:[function(require,module,exports){\nvar util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.exit().remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this);\n    var rect = thisGroup.select(\"rect\");\n    if(!rect[0][0]){\n      thisGroup.append(\"rect\");\n    }\n    var labelGroup = thisGroup.select(\"g\");\n    if(!labelGroup[0][0]) {\n      labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    }\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n\n},{\"./label/add-label\":18,\"./util\":27}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n\n},{\"./d3\":7,\"./label/add-label\":18,\"./lodash\":21,\"./util\":27}],5:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n            return \"url(\" + makeFragmentRef(location.href, edge.arrowheadId) + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split(\"#\")[0];\n  return baseUrl + \"#\" + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w),\n      points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.ownerSVGElement.getScreenCTM()\n        .inverse()\n        .multiply(elem.getScreenCTM())\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.getTotalLength()).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n\n},{\"./d3\":7,\"./intersect/intersect-node\":14,\"./lodash\":21,\"./util\":27}],6:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.exit().remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var thisGroup = d3.select(this);\n    var labelGroup = thisGroup.selectAll(\"g.label\");\n    if(!labelGroup[0][0]){\n      labelGroup = thisGroup.append(\"g\").classed(\"label\", true);\n    }\n    var node = g.node(v),\n        labelDom = addLabel(labelGroup, node),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(thisGroup, bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n\n},{\"./d3\":7,\"./label/add-label\":18,\"./lodash\":21,\"./util\":27}],7:[function(require,module,exports){\n// Stub to get D3 either via NPM or from the global object\nmodule.exports = window.d3;\n\n},{}],8:[function(require,module,exports){\n/* global window */\n\nvar dagre;\n\nif (require) {\n  try {\n    dagre = require(\"dagre\");\n  } catch (e) {}\n}\n\nif (!dagre) {\n  dagre = window.dagre;\n}\n\nmodule.exports = dagre;\n\n},{\"dagre\":undefined}],9:[function(require,module,exports){\n/* global window */\n\nvar graphlib;\n\nif (require) {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n\n},{\"graphlib\":undefined}],10:[function(require,module,exports){\nmodule.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n\n},{\"./intersect-circle\":11,\"./intersect-ellipse\":12,\"./intersect-node\":14,\"./intersect-polygon\":15,\"./intersect-rect\":16}],11:[function(require,module,exports){\nvar intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\n},{\"./intersect-ellipse\":12}],12:[function(require,module,exports){\nmodule.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n\n},{}],13:[function(require,module,exports){\nmodule.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\n},{}],14:[function(require,module,exports){\nmodule.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n\n},{}],15:[function(require,module,exports){\nvar intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n\n},{\"./intersect-line\":13}],16:[function(require,module,exports){\nmodule.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n\n},{}],17:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.select(\"foreignObject\");\n  if(!fo[0][0]) {\n    fo = root.append(\"foreignObject\")\n             .attr(\"width\", \"100000\");\n  }\n  var div = fo.select(\"div\");\n  if(!div[0][0]) {\n    div = fo\n        .append(\"xhtml:div\");\n    div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  }\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  var w, h;\n  div\n      .each(function() {\n        w = this.clientWidth;\n        h = this.clientHeight;\n      });\n\n  fo\n      .attr(\"width\", w)\n      .attr(\"height\", h);\n\n  return fo;\n}\n\n},{\"../util\":27}],18:[function(require,module,exports){\nvar addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.select(\"g\");\n  if(!labelSvg[0][0]){\n    labelSvg = root.append(\"g\");\n  }\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2);\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - labelBBox.height;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width/2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n\n},{\"./add-html-label\":17,\"./add-svg-label\":19,\"./add-text-label\":20}],19:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\n},{\"../util\":27}],20:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n\n},{\"../util\":27}],21:[function(require,module,exports){\n/* global window */\n\nvar lodash;\n\nif (require) {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n},{\"lodash\":undefined}],22:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n\n},{\"./d3\":7,\"./util\":27}],23:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\"),\n    _ = require(\"./lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./d3\":7,\"./lodash\":21,\"./util\":27}],24:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./d3\":7,\"./util\":27}],25:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    layout = require(\"./dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    if(g) {\n      preProcessGraph(g);\n\n      var outputGroup = createOrSelectGroup(svg, \"output\"),\n          clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n          edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n          edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n          nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n      // If parent has a label align with parent\n      if (svg.select(\".label\")[0][0]) {\n        var location = svg.select(\".label\").node().getBBox();\n        var x = location.x;\n        var y = (-1 * location.y) + 30;\n        outputGroup.attr(\"transform\",\n            \"translate(\" + x + \",\" + y + \")\");\n      }\n      layout(g);\n\n      positionNodes(nodes, g);\n      positionEdgeLabels(edgeLabels, g);\n      createEdgePaths(edgePathsGroup, g, arrows);\n\n      var clusters = createClusters(clustersGroup, g);\n      positionClusters(clusters, g);\n\n      postProcessGraph(g);\n    }\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  labelJust: \"center\",\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  paddingLeft: 0,\n  paddingRight: 0,\n  paddingTop: 0,\n  paddingBottom: 0,\n  arrowhead: \"normal\",\n  labelJust: \"left\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    applyPadding(node);\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n    canonicalizeLabelType(node);\n    canonicalizeJustification(node);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n\n    applyPadding(edge);\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n    canonicalizeLabelType(edge);\n    canonicalizeJustification(edge);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n\nfunction canonicalizeJustification(obj) {\n    switch(obj.labelJust.toLowerCase()) {\n        case \"r\":\n        case \"right\":\n            obj.labelJust = \"right\";\n            break;\n        case \"l\":\n        case \"left\":\n            obj.labelJust = \"left\";\n            break;\n        default:\n            obj.labelJust = \"center\";\n    }\n}\n\nfunction canonicalizeLabelType(obj) {\n  if (\"labelType\" in obj) {\n    var labelType = obj.labelType.toLowerCase();\n    if (labelType === \"svg\" || labelType === \"html\") {\n      return (obj.labelType = labelType);\n    }\n  }\n\n  if (typeof obj.label !== \"string\") {\n    // Assume label is either a function that returns a DOM element, or is a DOM\n    // element.\n    return (obj.labelType = \"html\");\n  }\n\n  return (obj.labelType = \"text\");\n}\n\nfunction applyPadding(obj) {\n    if (_.has(obj, \"paddingX\")) {\n      _.defaults(obj, {\n        paddingLeft: obj.paddingX,\n        paddingRight: obj.paddingX\n      });\n    }\n\n    if (_.has(obj, \"paddingY\")) {\n      _.defaults(obj, {\n        paddingTop: obj.paddingY,\n        paddingBottom: obj.paddingY\n      });\n    }\n\n    if (_.has(obj, \"padding\")) {\n      _.defaults(obj, {\n        paddingLeft: obj.padding,\n        paddingRight: obj.padding,\n        paddingTop: obj.padding,\n        paddingBottom: obj.padding\n      });\n    }\n\n}\n\n},{\"./arrows\":2,\"./create-clusters\":3,\"./create-edge-labels\":4,\"./create-edge-paths\":5,\"./create-nodes\":6,\"./dagre\":8,\"./lodash\":21,\"./position-clusters\":22,\"./position-edge-labels\":23,\"./position-nodes\":24,\"./shapes\":26}],26:[function(require,module,exports){\n\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  parent.selectAll(\"rect\").remove();\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  parent.selectAll(\"ellipse\").remove();\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  parent.selectAll(\"circle\").remove();\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  parent.selectAll(\"polygon\").remove();\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n\n},{\"./intersect/intersect-circle\":11,\"./intersect/intersect-ellipse\":12,\"./intersect/intersect-polygon\":15,\"./intersect/intersect-rect\":16}],27:[function(require,module,exports){\nvar _ = require(\"./lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n\n},{\"./lodash\":21}],28:[function(require,module,exports){\nmodule.exports = \"0.4.18-pre\";\n\n},{}]},{},[1])(1)\n});\n\n","var util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n","var util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.exit().remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this);\n    var rect = thisGroup.select(\"rect\");\n    if(!rect[0][0]){\n      thisGroup.append(\"rect\");\n    }\n    var labelGroup = thisGroup.select(\"g\");\n    if(!labelGroup[0][0]) {\n      labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    }\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n            return \"url(\" + makeFragmentRef(location.href, edge.arrowheadId) + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split(\"#\")[0];\n  return baseUrl + \"#\" + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w),\n      points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.ownerSVGElement.getScreenCTM()\n        .inverse()\n        .multiply(elem.getScreenCTM())\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.getTotalLength()).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.exit().remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var thisGroup = d3.select(this);\n    var labelGroup = thisGroup.selectAll(\"g.label\");\n    if(!labelGroup[0][0]){\n      labelGroup = thisGroup.append(\"g\").classed(\"label\", true);\n    }\n    var node = g.node(v),\n        labelDom = addLabel(labelGroup, node),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(thisGroup, bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n","// Stub to get D3 either via NPM or from the global object\nmodule.exports = window.d3;\n","/* global window */\n\nvar dagre;\n\nif (require) {\n  try {\n    dagre = require(\"dagre\");\n  } catch (e) {}\n}\n\nif (!dagre) {\n  dagre = window.dagre;\n}\n\nmodule.exports = dagre;\n","/* global window */\n\nvar graphlib;\n\nif (require) {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n","module.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n","var intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","module.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n","module.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","module.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","var intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n","module.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n","var util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.select(\"foreignObject\");\n  if(!fo[0][0]) {\n    fo = root.append(\"foreignObject\")\n             .attr(\"width\", \"100000\");\n  }\n  var div = fo.select(\"div\");\n  if(!div[0][0]) {\n    div = fo\n        .append(\"xhtml:div\");\n    div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  }\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  var w, h;\n  div\n      .each(function() {\n        w = this.clientWidth;\n        h = this.clientHeight;\n      });\n\n  fo\n      .attr(\"width\", w)\n      .attr(\"height\", h);\n\n  return fo;\n}\n","var addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.select(\"g\");\n  if(!labelSvg[0][0]){\n    labelSvg = root.append(\"g\");\n  }\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2);\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - labelBBox.height;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width/2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n","var util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","var util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","/* global window */\n\nvar lodash;\n\nif (require) {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\"),\n    _ = require(\"./lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n","var _ = require(\"./lodash\"),\n    layout = require(\"./dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    if(g) {\n      preProcessGraph(g);\n\n      var outputGroup = createOrSelectGroup(svg, \"output\"),\n          clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n          edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n          edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n          nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n      // If parent has a label align with parent\n      if (svg.select(\".label\")[0][0]) {\n        var location = svg.select(\".label\").node().getBBox();\n        var x = location.x;\n        var y = (-1 * location.y) + 30;\n        outputGroup.attr(\"transform\",\n            \"translate(\" + x + \",\" + y + \")\");\n      }\n      layout(g);\n\n      positionNodes(nodes, g);\n      positionEdgeLabels(edgeLabels, g);\n      createEdgePaths(edgePathsGroup, g, arrows);\n\n      var clusters = createClusters(clustersGroup, g);\n      positionClusters(clusters, g);\n\n      postProcessGraph(g);\n    }\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  labelJust: \"center\",\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  paddingLeft: 0,\n  paddingRight: 0,\n  paddingTop: 0,\n  paddingBottom: 0,\n  arrowhead: \"normal\",\n  labelJust: \"left\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    applyPadding(node);\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n    canonicalizeLabelType(node);\n    canonicalizeJustification(node);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n\n    applyPadding(edge);\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n    canonicalizeLabelType(edge);\n    canonicalizeJustification(edge);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n\nfunction canonicalizeJustification(obj) {\n    switch(obj.labelJust.toLowerCase()) {\n        case \"r\":\n        case \"right\":\n            obj.labelJust = \"right\";\n            break;\n        case \"l\":\n        case \"left\":\n            obj.labelJust = \"left\";\n            break;\n        default:\n            obj.labelJust = \"center\";\n    }\n}\n\nfunction canonicalizeLabelType(obj) {\n  if (\"labelType\" in obj) {\n    var labelType = obj.labelType.toLowerCase();\n    if (labelType === \"svg\" || labelType === \"html\") {\n      return (obj.labelType = labelType);\n    }\n  }\n\n  if (typeof obj.label !== \"string\") {\n    // Assume label is either a function that returns a DOM element, or is a DOM\n    // element.\n    return (obj.labelType = \"html\");\n  }\n\n  return (obj.labelType = \"text\");\n}\n\nfunction applyPadding(obj) {\n    if (_.has(obj, \"paddingX\")) {\n      _.defaults(obj, {\n        paddingLeft: obj.paddingX,\n        paddingRight: obj.paddingX\n      });\n    }\n\n    if (_.has(obj, \"paddingY\")) {\n      _.defaults(obj, {\n        paddingTop: obj.paddingY,\n        paddingBottom: obj.paddingY\n      });\n    }\n\n    if (_.has(obj, \"padding\")) {\n      _.defaults(obj, {\n        paddingLeft: obj.padding,\n        paddingRight: obj.padding,\n        paddingTop: obj.padding,\n        paddingBottom: obj.padding\n      });\n    }\n\n}\n","\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  parent.selectAll(\"rect\").remove();\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  parent.selectAll(\"ellipse\").remove();\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  parent.selectAll(\"circle\").remove();\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  parent.selectAll(\"polygon\").remove();\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","var _ = require(\"./lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","module.exports = \"0.4.18-pre\";\n"],"sourceRoot":"/source/"}